name: Vijoro - PR validation

on:
  pull_request:
    branches: "main"
# *** Jobs can be refined with matrix-strategies ***
jobs:
  # Verify frontend that the build runs locally before push to prod
  build-and-run-frontend:
    name: Build and validate frontend(Pre-production)
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout frontend repository
      - name: Checkout frontend repository
        uses: actions/checkout@v4
        # Step 2: Setup Node.js
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
        # Step 3: Cache node_modules
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

        # Step 4: List node modules if cache miss
      - name: List the state of node modules
        if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        working-directory: frontend
        run: npm list
        continue-on-error: true
      
        # Step 5: Install dependencies and run build
      - name: Install dependencies and run build
        working-directory: frontend
        run: |
          npm ci
          npm run build

  build-and-run-backend:
    name: Build and validate backend(Pre-production)
    runs-on: "ubuntu-latest"
    steps:
      # Step 1: Checkout repository
      - name: Checkout backend repository
        uses: actions/checkout@v4
        # Step 2: Setup Node.js
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
        # Step 3: Cache node_modules
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: backend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

        # Step 4: List node modules if cache miss
      - name: List the state of node modules
        if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        working-directory: backend
        run: npm list
        continue-on-error: true
      
      # Step 5: Install dependencies and run build
      - name: Install dependencies and run build
        working-directory: backend
        run: |
          npm ci
          npm run build
# test